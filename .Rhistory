source('~/.active-rstudio-document', echo=TRUE)
#lines(density(z), col="blue", lwd=2)
mean(z)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
\sum_{i=1}^{n} (Y_i - 80 - \hat{\beta}_1 X_i)^2.$$
x=(log(u/2))^(1/3)
u=runif(25,0,1)
x=(log(u/2))^(1/3)
u=runif(25,0,1)
x=(log(u/2))^(1/3)
x
u=runif(25,0,1)
x=(log(u/2))**(1/3)
x
u=runif(25,0,1)
x=(log(u/2))
x
curve(x, 0, 1)
plot(x, 0, 1)
plot(x, from=0, to=1)
curve(sin, -2*pi, 2*pi, xname = "t")
curve(X^2, -2*pi, 2*pi, xname = "t")
curve(t^2, -2*pi, 2*pi, xname = "t")
curve(6t^2, -2*pi, 2*pi, xname = "t")
curve(6*t^2, -2*pi, 2*pi, xname = "t")
curve(6*t^2, -2*pi, 2*pi, xname = "t")
curve(6*(t^2)*exp(-2 * (t^3)), -2*pi, 2*pi, xname = "t")
curve(6*(t^2)*exp(-2 * (t^3)), 0, 1000, xname = "t")
exp(2.7)
exp(1)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t")
curve(exp(-2 * (t^3)), 0, 5, xname = "t")
curve(1- exp(-2 * (t^3)), 0, 5, xname = "t")
curve(exp(-2 * (t^3)), 0, 5, xname = "t")
curve(1- exp(-2 * (t^3)), 0, 5, xname = "t")
curve(-exp(-2 * (t^3)), 0, 5, xname = "t")
curve(1-exp(-2 * (t^3)), 0, 5, xname = "t")
u=runif(25,0,1)
x=(-log(1-u)/2)^(1/3)
x
hist(x)
hist(x)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add="True")
hist(x)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
hist(x, prob=TRUE)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
u=runif(300,0,1)
x=(-log(1-u)/2)^(1/3)
x
hist(x, prob=TRUE)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
u=runif(10000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
u=runif(100000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
u=runif(100000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE, breaks=30)
u=runif(100000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE, bins=30)
library(lattice)
histogram(x, prob=TRUE)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE, bins=30)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t")
u=runif(100000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE, bins=30)
u=runif(100000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE, breaks=30)
u=runif(100000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE, breaks=50)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
curve(1-exp(-2 * (t^3)), 0, 5, xname = "t")
u=runif(50000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE, breaks=50)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
u=runif(50000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE, breaks=25)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
hist(x, prob=TRUE, breaks=25)
u=runif(50000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE, breaks=25)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
u=runif(50000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE, breaks=25)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
u=runif(50000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE, breaks=25)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
u=runif(50000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE, breaks=25)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
u=runif(50000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE, breaks=25)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
u=runif(50000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE, breaks=25)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
u=runif(50000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE, breaks=25)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
u=runif(50000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE, breaks=25)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
u=runif(50000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE, breaks=25)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
u=runif(50000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE, breaks=25)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
u=runif(50000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE, breaks=25)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
u=runif(50000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE, breaks=25)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
u=runif(50000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE, breaks=25)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
u=runif(50000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE, breaks=25)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
u=runif(50000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE, breaks=50)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
u=runif(50000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE, breaks=30)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
u=runif(50000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE, breaks=30)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
u=runif(50000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE, breaks=30)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
u=runif(50000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE, breaks=30)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
u=runif(50000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE, breaks=30)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
u=runif(50000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE, breaks=30)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
u=runif(50000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE, breaks=30)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
u=runif(50000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE, breaks=30)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE, color='r')
u=runif(50000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE, breaks=30)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE, col='r')
u=runif(50000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE, breaks=30)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE, col='r')
u=runif(50000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE, breaks=30)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE, col='red')
u=runif(25,0,1)
x=(-log(1-u)/2)^(1/3)
x
u2=runif(50000,0,1)
x2=(-log(1-u)/2)^(1/3)
hist(x2, prob=TRUE, breaks=30)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE, col='red')
u=runif(25,0,1)
x=(-log(1-u)/2)^(1/3)
x
u2=runif(50000,0,1)
x2=(-log(1-u2)/2)^(1/3)
hist(x2, prob=TRUE, breaks=30)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE, col='red')
u=runif(25,0,1)
x=(-log(1-u)/2)^(1/3)
x
u=runif(50000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x2, prob=TRUE, breaks=30)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE, col='red')
# generate 25 random numbers from f(x)
u=runif(25,0,1)
x=(-log(1-u)/2)^(1/3)
x
# compare histogram of 50k random numbers to theoretical distribution
u=runif(50000,0,1)
x=(-log(1-u)/2)^(1/3)
hist(x, prob=TRUE, breaks=30)
curve(6*(t^2)*exp(-2 * (t^3)), 0, 5, xname = "t", add=TRUE, col='red')
\end{itemize}
<<plots>>=
install.packages('SweaveListingUtils')
&= 14y(1-y^{1/3}) 0 < y < 1
<<symmetric, fig=TRUE>>=
# plot f(x)
curve((t/25), 0, 5, xname = "t")
curve((2/5 - t/25), 5, 10, xname = "t", add=TRUE)
@
# plot f(x)
curve((t/25), 0, 5, xname = "t")
curve((2/5 - t/25), 5, 10, xname = "t", add=TRUE)
# plot f(x)
curve((t/25), 0, 5, xname = "x")
curve((2/5 - t/25), 5, 10, xname = "x", add=TRUE)
curve((2/5 - x/25), 5, 10, xname = "x", add=TRUE)
# plot f(x)
curve((x/25), 0, 5, xname = "x")
curve((2/5 - x/25), 5, 10, xname = "x", add=TRUE)
# plot f(x)
curve((x/25), 0, 5, xname = "x", ylabel="y")
curve((2/5 - x/25), 5, 10, xname = "x", add=TRUE)
# plot f(x)
curve((x/25), 0, 5, xname = "x", ylab="y")
curve((2/5 - x/25), 5, 10, xname = "x", add=TRUE)
# plot f(x)
curve((x/25), 0, 5, xname = "x", ylab="f(x)")
curve((2/5 - x/25), 5, 10, xname = "x", add=TRUE)
# plot f(x)
curve((x/25), 0, 10, xname = "x", ylab="f(x)")
curve((2/5 - x/25), 5, 10, xname = "x", add=TRUE)
# plot f(x)
curve((x/25), 0, 10, xname = "x", ylab="f(x)", ylim=.2)
curve((2/5 - x/25), 5, 10, xname = "x", add=TRUE)
# plot f(x)
curve((x/25), 0, 10, xname = "x", ylab="f(x)", ylim=c(0,.2))
curve((2/5 - x/25), 5, 10, xname = "x", add=TRUE)
# plot f(x)
curve((x/25), 0, 10, xname = "x", ylab="f(x)", ylim=c(0,.19))
curve((2/5 - x/25), 5, 10, xname = "x", add=TRUE)
# plot f(x)
curve((x/25), 0, 10, xname = "x", ylab="f(x)", ylim=c(0,.195))
curve((2/5 - x/25), 5, 10, xname = "x", add=TRUE)
# plot f(x)
curve((x/25), 0, 10, xname = "x", ylab="f(x)", ylim=c(0,.194))
curve((2/5 - x/25), 5, 10, xname = "x", add=TRUE)
# plot f(x)
curve((x/25), 0, 10, xname = "x", ylab="f(x)", ylim=c(0,.193))
curve((2/5 - x/25), 5, 10, xname = "x", add=TRUE)
x = seq(1,100)
K = seq(1,100)
y = choose(6, 0) * choose(94, K) / choose(100, K)
K = seq(1,100)
y = choose(6, 0) * choose(94, K) / choose(100, K)
Plot(K, y)
K = seq(1,100)
y = choose(6, 0) * choose(94, K) / choose(100, K)
plot(K, y)
K = seq(1,100)
y = choose(6, 0) * choose(94, K) / choose(100, K)
abline(h=.1)
plot(K, y)
K = seq(1,100)
y = choose(6, 0) * choose(94, K) / choose(100, K)
plot(K, y)
abline(h=.1)
K = seq(1,100)
y = choose(6, 0) * choose(94, K) / choose(100, K)
plot(K, y, cex=.1)
abline(h=.1)
K = seq(1,100)
y = choose(6, 0) * choose(94, K) / choose(100, K)
plot(K, y, cex=.5)
abline(h=.1)
K = seq(1,100)
y = choose(6, 0) * choose(94, K) / choose(100, K)
plot(K, y, cex=.5)
abline(h=.1, \dots)
K = seq(1,100)
y = choose(6, 0) * choose(94, K) / choose(100, K)
plot(K, y, cex=.5)
abline(h=.1, \dots)
K = seq(1,100)
y = choose(6, 0) * choose(94, K) / choose(100, K)
plot(K, y, cex=.5)
abline(h=.1)
K = seq(1,100)
P = choose(6, 0) * choose(94, K) / choose(100, K)
plot(K, P, cex=.5)
abline(h=.1)
K = seq(1,100)
P = choose(6, 0) * choose(94, K) / choose(100, K)
df = data.frame(K,P)
with(df[df$K <50,], plot(K, P, cex=.5))
abline(h=.1)
K = seq(1,100)
P = choose(6, 0) * choose(94, K) / choose(100, K)
df = data.frame(K,P)
with(df[df$K > 25 & df$K > 35,], plot(K, P, cex=.5))
abline(h=.1)
K = seq(1,100)
P = choose(6, 0) * choose(94, K) / choose(100, K)
df = data.frame(K,P)
with(df[df$K > 25 & df$K < 35,], plot(K, P, cex=.5))
abline(h=.1)
K = seq(1,100)
P = choose(6, 0) * choose(94, K) / choose(100, K)
df = data.frame(K,P)
with(df[df$K > 20 & df$K < 35,], plot(K, P, cex=.5))
abline(h=.1)
K = seq(1,100)
P = choose(6, 0) * choose(94, K) / choose(100, K)
df = data.frame(K,P)
with(df[df$K > 25 & df$K < 35,], plot(K, P, cex=.5))
abline(h=.1)
K = seq(1,100)
P = choose(6, 0) * choose(94, K) / choose(100, K) + choose(6, 1) * choose(94, K-1) / choose(100, K)
df = data.frame(K,P)
with(df[df$K > 25 & df$K < 35,], plot(K, P, cex=.5))
abline(h=.1)
K = seq(1,100)
P = choose(6, 0) * choose(94, K) / choose(100, K) + choose(6, 1) * choose(94, K-1) / choose(100, K)
df = data.frame(K,P)
with(df[df$K > 20 & df$K < 40,], plot(K, P, cex=.5))
abline(h=.1)
K = seq(1,100)
P = choose(6, 0) * choose(94, K) / choose(100, K) + choose(6, 1) * choose(94, K-1) / choose(100, K)
df = data.frame(K,P)
with(df[df$K > 20 & df$K < 70,], plot(K, P, cex=.5))
abline(h=.1)
K = seq(1,100)
P = choose(6, 0) * choose(94, K) / choose(100, K) + choose(6, 1) * choose(94, K-1) / choose(100, K)
df = data.frame(K,P)
with(df[df$K > 45 & df$K < 55,], plot(K, P, cex=.5))
abline(h=.1)
K = seq(1,100)
P = choose(6, 0) * choose(94, K) / choose(100, K) +
choose(6, 1) * choose(94, K-1) / choose(100, K)
df = data.frame(K,P)
with(df[df$K > 45 & df$K < 55,], plot(K, P, cex=.5))
abline(h=.1)
x = seq(1,84)
p = choose(100, x) * 0.8^x * (1-0.8)^(100-x)
x = seq(1,84)
p = choose(100, x) * 0.8^x * (1-0.8)^(100-x)
1-sum(p)
x = seq(1,84)
p = choose(100, x) * 0.8^x * (1-0.8)^(100-x)
1-sum(p)
x = seq(1,84)
p = choose(100, x) * 0.8^x * (1-0.8)^(100-x)
1-sum(p)
x = seq(1,84)
p = choose(100, x) * 0.8^x * (1-0.8)^(100-x)
1-sum(p)
K = seq(1,100)
P = choose(6, 0) * choose(94, K) / choose(100, K)
df = data.frame(K,P)
with(df[df$K > 25 & df$K < 35,], stairs(K, P, cex=.5))
abline(h=.1)
K = seq(1,100)
P = choose(6, 0) * choose(94, K) / choose(100, K)
df = data.frame(K,P)
with(df[df$K > 25 & df$K < 35,], stairs(K, P))
abline(h=.1)
K = seq(1,100)
P = choose(6, 0) * choose(94, K) / choose(100, K)
df = data.frame(K,P)
with(df[df$K > 25 & df$K < 35,], step(K, P, cex=.5))
abline(h=.1)
K = seq(1,100)
P = choose(6, 0) * choose(94, K) / choose(100, K)
df = data.frame(K,P)
with(df[df$K > 25 & df$K < 35,], plot(K, P, cex=.5))
abline(h=.1)
x1 = seq(12,15)
p1 = choose(15, x1) * 0.75^x1 * (1-0.75)^(15-x1)
x2 = seq(0,8)
p2 = choose(15, x2) * 0.75^x2 * (1-0.75)^(15-x2)
1-sum(p1) -sum(p2)
x1 = seq(12,15)
p1 = choose(15, x1) * 0.75^x1 * (1-0.75)^(15-x1)
x2 = seq(0,8)
p2 = choose(15, x2) * 0.75^x2 * (1-0.75)^(15-x2)
answer = 1-sum(p1) -sum(p2)
answer
x = rnorm(100, 25)
y = x = runif(100, 75, 100)
x = runif(100, 50, 100)
y = runif(100, 75, 100)
x = runif(100, 50, 100)
x2 = x-10
y = runif(100, 75, 100)
source('~/.active-rstudio-document', echo=TRUE)
x = runif(100, 50, 100)
x2 = x-10
y = runif(100, 75, 100)
fit = lm (y~x1)
summary(fit)
x = runif(100, 50, 100)
x2 = x-10
y = runif(100, 75, 100)
fit = lm (y~x1)
summary(fit)
fit = lm (y~x)
summary(fit)
x = runif(100, 50, 100)
x2 = x-10
y = runif(100, 75, 100)
fit = lm (y~x)
summary(fit)
fit2 = lm(y~x2)
summary(fit2)
x = runif(100, 50, 100)
x2 = x-10
y = runif(100, 75, 100)
x3 = rnorm(100)
fit = lm (y~x + x3)
summary(fit)
fit2 = lm(y~x2 + x3)
summary(fit2)
x = runif(100, 50, 100)
x2 = x-10
y = runif(100, 75, 100)
x3 = rnorm(100)
fit = lm (y~x + x3)
summary(fit)
fit2 = lm(y~x2 + x3)
summary(fit2)
anova(fit2)
x = runif(100, 50, 100)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
shiny::runApp('Documents/github/shiny-sports-app/sports-viz-app')
shiny::runApp('Documents/github/shiny-sports-app/sports-viz-app')
shiny::runApp('Documents/github/shiny-sports-app/sports-viz-app')
shiny::runApp('Documents/github/shiny-sports-app/sports-viz-app')
shiny::runApp('Documents/github/shiny-sports-app/sports-viz-app')
shiny::runApp('Documents/github/shiny-sports-app/sports-viz-app')
shiny::runApp('Documents/github/shiny-sports-app/sports-viz-app')
shiny::runApp('Documents/github/shiny-sports-app/sports-viz-app')
shiny::runApp('Documents/github/shiny-sports-app/sports-viz-app')
shiny::runApp('Documents/github/shiny-sports-app/sports-viz-app')
shiny::runApp('Documents/github/shiny-sports-app/sports-viz-app')
shiny::runApp('Documents/github/shiny-sports-app/sports-viz-app')
shiny::runApp('Documents/github/shiny-sports-app/sports-viz-app')
shiny::runApp('Documents/github/shiny-sports-app/sports-viz-app')
shiny::runApp('Documents/github/shiny-sports-app/sports-viz-app')
shiny::runApp('Documents/github/shiny-sports-app/sports-viz-app')
setwd("~/Documents/github/shiny-sports-app")
shiny::runApp('sports-viz-app')
shiny::runApp('sports-viz-app')
setwd("~/Documents/github/shiny-sports-app")
shiny::runApp('sports-viz-app')
setwd("~/Documents/github/shiny-sports-app")
wd
printwd
getwd()
shiny::runApp('sports-viz-app')
